@using PagedList;
@using PagedList.Mvc;
@using NotesMarketPlace.Context

@model NotesMarketPlace.Models.notesearch

@{
    ViewBag.Title = "NoteSearch";
    Layout = "~/Views/Shared/RegisteredNavbar.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>

    <!-- important meta tags -->
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Title -->
    <title>NotesMarketPlace</title>

    <!-- favicon-->
    <link rel="icon" href="~/Content/User/home/favicon.ico" />

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet">

    <!-- icons -->
    <link rel="stylesheet" href="~/Content/User/font-awesome/css/font-awesome.min.css">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/Content/User/bootstrap/bootstrap.min.css" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/Content/User/style.css" />

    <!-- Responsive CSS -->
    <link rel="stylesheet" href="~/Content/User/responsive.css">

</head>

<body>

    <section id="search-page" class="heading-space-img main-wrapper">

        <div id="search-page-header">
            <div class="container">
                <div id="search-page-title" class="text-center">
                    <h3>Search Notes</h3>
                </div>
            </div>
        </div>

        <div class="content-box-lg">
            <div class="container">
                <div class="row">

                    <div class="col-md-12">
                        <div class="search-notes-title">
                            <h4>Search and Filter Notes</h4>
                        </div>
                    </div>


                    @using (Html.BeginForm("NoteSearch", "NoteSearch", FormMethod.Get, new { @id = "search_form" }))
                    {
                        <div class="col-md-12">
                            <div id="search-page-top">

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group has-search">
                                            <span class="fa fa-search form-control-feedback"></span>
                                            <input type="text" name="Search_keyword" class="form-control search-field" placeholder="Search notes here...">
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            @Html.DropDownListFor(x => x.Type, new SelectList(Model.Type, "ID", "Type"), "Select type", new { @class = "form-control", name = "notetype", onchange = "note_search()" })
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            @Html.DropDownListFor(x => x.Category, new SelectList(Model.Category, "ID", "CategoryName"), "Select category", new { @class = "form-control", onchange = "note_search()" })
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            @Html.DropDownListFor(x => x.University, new SelectList(Model.University), "Select university", new { @class = "form-control", onchange = "note_search()" })
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            @Html.DropDownListFor(x => x.Courses, new SelectList(Model.Courses), "Select course", new { @class = "form-control", onchange = "note_search()" })
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            @Html.DropDownListFor(x => x.Country, new SelectList(Model.Country, "ID", "CountryName"), "Select country", new { @class = "form-control", onchange = "note_search()" })
                                        </div>
                                    </div>

                                    <div class="col-md-2">
                                        <div class="form-group" id="form-group-1">
                                            <select class="form-control">
                                                <option value="">Select rating</option>
                                                <option value="type-1">+1</option>
                                                <option value="type-2">+2</option>
                                                <option>+3</option>
                                                <option>+4</option>
                                                <option>5</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>


                    }

                </div>
            </div>
        </div>

        <div class="content-box-lg">
            <div class="container">
                <div class="row">

                    <div class="col-md-12">
                        <div class="search-notes-title">
                            <h4>Total @ViewBag.notecount notes</h4>
                        </div>
                    </div>

                    @if (Model.Note.Count() == 0)
                    {
                        <div class="col-md-12">
                            <div class="search-notes-title">
                                <h4>No Records Found</h4>
                            </div>
                        </div>
                    }

                    @foreach (var item in Model.Note)
                    {


                        string path = "";
                        if (item.DisplayPicture != null)
                        {
                            path = item.DisplayPicture; 
                        }

                        else
                        {
                            path = "../DefaultImg/3.jpg";
                        }

                        <div class="col-md-4">
                            <div class="card">
                                <img src="@path" alt="Book Image" width="100" class="card-img" />
                                <div class="card-body">
                                    <h4 class="card-title">
                                        <a href="@Url.Action("NoteDetails","NoteSearch",new { ID = item.ID})">
                                            @item.NoteTitle
                                        </a>
                                    </h4>



                                    <div class="card-text">
                                        <ul id="book-list">
                                            @{
                                                List<NoteReview> list = item.NoteReview.Where(x => x.NoteID == item.ID).ToList();
                                                int noOfReviews = list.Count();
                                                var sumOfStar = list.Sum(x => x.Rate);

                                                List<SpamReports> list_spamreport = item.SpamReports.Where(x => x.NoteID == item.ID).ToList();
                                                var noOfSpam = list_spamreport.Count();
                                            }

                                            <li>
                                                @if (item.InstitutionName != null)
                                                {
                                                    <i class="fa fa-university"></i><span>@item.InstitutionName</span>
                                                }

                                            </li>
                                            <li>
                                                @if (item.NumberOfPages != null)
                                                {
                                                    <i class="fa fa-book"></i><span>@item.NumberOfPages Pages</span>
                                                }
                                            </li>
                                            <li>
                                                
                                                <i class="fa fa-calendar"></i><span>@item.CreatedDate.Value.ToString("ddd, MMM dd yyyy")</span>
                                            </li>
                                            <li>
                                                @if (noOfSpam != 0)
                                                {
                                                    <i class="fa fa-flag-o"></i><span style="color: red">@noOfSpam Users marked this as an inappropriate</span>
                                                }
                                            </li>

                                            @if (noOfReviews != 0)
                                            {
                                                var avg = sumOfStar / noOfReviews;
                                                <li class="rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        string addClass = (i <= avg ? "fa fa-star" : "fa fa-star-o");

                                                        <i class="@addClass"></i>
                                                    }
                                                    <span>@noOfReviews Reviews</span>
                                                </li>
                                             }

                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

        <!-- Pagination -->
        <div class="content-box-md">
            <div class="container">
                <div class="row d-flex justify-content-center">
                    <div class="col-md-12 align-center">
                        <div class="pagination">
                            @Html.PagedListPager(Model.Note, page => Url.Action("NoteSearch", new { page }))
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </section>

    <!-- Jquery  -->
    <script src="~/Scripts/User/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="~/Scripts/User/bootstrap/bootstrap.min.js"></script>

    <!-- Validation -->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <!-- Custom JS -->
    <script src="~/Scripts/User/script.js"></script>

</body>

</html>

